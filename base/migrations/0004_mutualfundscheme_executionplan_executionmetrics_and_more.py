# Generated by Django 5.2.1 on 2025-06-30 14:03

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0003_servicerequesttype_servicerequestworkflow_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MutualFundScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_name', models.CharField(max_length=200)),
                ('amc_name', models.CharField(max_length=100)),
                ('scheme_code', models.CharField(max_length=50, unique=True)),
                ('scheme_type', models.CharField(choices=[('equity', 'Equity'), ('debt', 'Debt'), ('hybrid', 'Hybrid'), ('liquid', 'Liquid'), ('elss', 'ELSS'), ('index', 'Index'), ('etf', 'ETF')], max_length=50)),
                ('risk_category', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('very_high', 'Very High')], default='moderate', max_length=20)),
                ('minimum_investment', models.DecimalField(decimal_places=2, default=500.0, max_digits=10)),
                ('minimum_sip', models.DecimalField(decimal_places=2, default=500.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Mutual Fund Scheme',
                'verbose_name_plural': 'Mutual Fund Schemes',
                'ordering': ['amc_name', 'scheme_name'],
            },
        ),
        migrations.CreateModel(
            name='ExecutionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('plan_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('client_approved', 'Client Approved'), ('in_execution', 'In Execution'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('client_approved_at', models.DateTimeField(blank=True, null=True)),
                ('execution_started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('excel_file', models.FileField(blank=True, help_text='Generated Excel file for the plan', null=True, upload_to='execution_plans/excel/')),
                ('notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('client_communication_sent', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['rm_head', 'business_head']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_execution_plans', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_plans', to='base.client')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['rm', 'rm_head']}, on_delete=django.db.models.deletion.CASCADE, related_name='created_execution_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Execution Plan',
                'verbose_name_plural': 'Execution Plans',
                'ordering': ['-created_at'],
                'permissions': [('can_approve_execution_plan', 'Can approve execution plans'), ('can_execute_plan', 'Can execute approved plans')],
            },
        ),
        migrations.CreateModel(
            name='ExecutionMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_to_approval', models.DecimalField(blank=True, decimal_places=2, help_text='Hours from creation to approval', max_digits=8, null=True)),
                ('time_to_client_approval', models.DecimalField(blank=True, decimal_places=2, help_text='Hours from approval to client approval', max_digits=8, null=True)),
                ('time_to_execution', models.DecimalField(blank=True, decimal_places=2, help_text='Hours from client approval to execution start', max_digits=8, null=True)),
                ('total_execution_time', models.DecimalField(blank=True, decimal_places=2, help_text='Hours from execution start to completion', max_digits=8, null=True)),
                ('total_investment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_redemption_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('net_investment', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('sip_count', models.PositiveIntegerField(default=0)),
                ('total_monthly_sip', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_actions', models.PositiveIntegerField(default=0)),
                ('successful_actions', models.PositiveIntegerField(default=0)),
                ('failed_actions', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('execution_plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='base.executionplan')),
            ],
            options={
                'verbose_name': 'Execution Metrics',
                'verbose_name_plural': 'Execution Metrics',
            },
        ),
        migrations.CreateModel(
            name='PlanAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('purchase', 'Purchase'), ('redemption', 'Redemption'), ('sip_start', 'SIP Start'), ('sip_modify', 'SIP Modify'), ('sip_stop', 'SIP Stop'), ('switch', 'Switch'), ('stp_start', 'STP Start'), ('stp_stop', 'STP Stop'), ('swp_start', 'SWP Start'), ('swp_stop', 'SWP Stop')], max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('units', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('sip_date', models.PositiveIntegerField(blank=True, help_text='SIP date (1-28)', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('priority', models.PositiveIntegerField(default=1, help_text='Execution priority (1=highest)')),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('executed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('executed_units', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('nav_price', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('executed_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ops_exec', 'ops_team_lead']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='executed_actions', to=settings.AUTH_USER_MODEL)),
                ('execution_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='base.executionplan')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_actions', to='base.mutualfundscheme')),
                ('target_scheme', models.ForeignKey(blank=True, help_text='Target scheme for switch/STP', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_actions', to='base.mutualfundscheme')),
            ],
            options={
                'verbose_name': 'Plan Action',
                'verbose_name_plural': 'Plan Actions',
                'ordering': ['priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlanComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_internal', models.BooleanField(default=True, help_text='Internal comment (not visible to client)')),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_comments', to=settings.AUTH_USER_MODEL)),
                ('execution_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='base.executionplan')),
            ],
            options={
                'verbose_name': 'Plan Comment',
                'verbose_name_plural': 'Plan Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlanTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False, help_text='Available to all RMs')),
                ('template_data', models.JSONField(help_text='Template structure and default values')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Plan Template',
                'verbose_name_plural': 'Plan Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlanWorkflowHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('client_approved', 'Client Approved'), ('in_execution', 'In Execution'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], max_length=20)),
                ('to_status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('client_approved', 'Client Approved'), ('in_execution', 'In Execution'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('comments', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plan_status_changes', to=settings.AUTH_USER_MODEL)),
                ('execution_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_history', to='base.executionplan')),
            ],
            options={
                'verbose_name': 'Plan Workflow History',
                'verbose_name_plural': 'Plan Workflow Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio_number', models.CharField(blank=True, max_length=50)),
                ('units', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('current_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('cost_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('sip_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sip_date', models.PositiveIntegerField(blank=True, help_text='SIP date (1-28)', null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_holdings', to='base.client')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_holdings', to='base.mutualfundscheme')),
            ],
            options={
                'verbose_name': 'Client Portfolio',
                'verbose_name_plural': 'Client Portfolios',
                'ordering': ['client', 'scheme'],
                'unique_together': {('client', 'scheme', 'folio_number')},
            },
        ),
    ]
