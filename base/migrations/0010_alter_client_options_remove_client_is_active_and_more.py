# Generated by Django 5.2.1 on 2025-07-06 08:05

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0009_alter_client_options_client_is_active'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='client',
            options={},
        ),
        migrations.RemoveField(
            model_name='client',
            name='is_active',
        ),
        migrations.CreateModel(
            name='PortfolioActionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('plan_name', models.CharField(help_text='Name for this action plan', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Optional description')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('executed', 'Executed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_action_plans', to=settings.AUTH_USER_MODEL)),
                ('client_portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_plans', to='base.clientportfolio')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_action_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Portfolio Action Plan',
                'verbose_name_plural': 'Portfolio Action Plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('redeem', 'Redeem'), ('switch', 'Switch'), ('stp', 'STP (Systematic Transfer Plan)'), ('sip', 'SIP (Systematic Investment Plan)'), ('swp', 'SWP (Systematic Withdrawal Plan)')], max_length=20)),
                ('priority', models.PositiveIntegerField(default=1, help_text='Execution priority (1 = highest)')),
                ('source_scheme', models.CharField(help_text='Source scheme name (for current portfolio scheme or switch/STP source)', max_length=300)),
                ('target_scheme', models.CharField(blank=True, help_text='Target scheme name (for switch/STP/SIP target)', max_length=300)),
                ('redeem_by', models.CharField(blank=True, choices=[('all_units', 'All Units'), ('specific_amount', 'Specific Amount'), ('specific_units', 'Specific Units')], help_text='Method of redemption', max_length=20)),
                ('redeem_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount to redeem (if redeem_by is specific_amount)', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('redeem_units', models.DecimalField(blank=True, decimal_places=4, help_text='Units to redeem (if redeem_by is specific_units)', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('switch_by', models.CharField(blank=True, choices=[('all_units', 'All Units'), ('specific_amount', 'Specific Amount'), ('specific_units', 'Specific Units')], help_text='Method of switching', max_length=20)),
                ('switch_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount to switch', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('switch_units', models.DecimalField(blank=True, decimal_places=4, help_text='Units to switch', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('stp_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount to transfer regularly in STP', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('stp_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('fortnightly', 'Fortnightly'), ('monthly', 'Monthly')], help_text='Frequency of STP transfers', max_length=20)),
                ('sip_amount', models.DecimalField(blank=True, decimal_places=2, help_text='SIP investment amount', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('sip_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('fortnightly', 'Fortnightly'), ('monthly', 'Monthly')], help_text='SIP frequency', max_length=20)),
                ('sip_date', models.PositiveIntegerField(blank=True, help_text='SIP execution date (1-31)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('swp_amount', models.DecimalField(blank=True, decimal_places=2, help_text='SWP withdrawal amount', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('swp_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('fortnightly', 'Fortnightly'), ('monthly', 'Monthly')], help_text='SWP frequency', max_length=20)),
                ('swp_date', models.PositiveIntegerField(blank=True, help_text='SWP execution date (1-31)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('executed', 'Executed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('execution_notes', models.TextField(blank=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('executed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='executed_portfolio_actions', to=settings.AUTH_USER_MODEL)),
                ('action_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='base.portfolioactionplan')),
            ],
            options={
                'verbose_name': 'Portfolio Action',
                'verbose_name_plural': 'Portfolio Actions',
                'ordering': ['priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActionPlanWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(max_length=20)),
                ('to_status', models.CharField(max_length=20)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action_plan_workflow_changes', to=settings.AUTH_USER_MODEL)),
                ('action_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_history', to='base.portfolioactionplan')),
            ],
            options={
                'verbose_name': 'Action Plan Workflow',
                'verbose_name_plural': 'Action Plan Workflows',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='ActionPlanComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_internal', models.BooleanField(default=True, help_text='Internal comment (not visible to client)')),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_plan_comments', to=settings.AUTH_USER_MODEL)),
                ('action_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='base.portfolioactionplan')),
            ],
            options={
                'verbose_name': 'Action Plan Comment',
                'verbose_name_plural': 'Action Plan Comments',
                'ordering': ['-created_at'],
            },
        ),
    ]
